import numpy as np
import scipy.stats as stats
import math
from math import sqrt
# Задача 1. Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного 
# скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков, а затем с использованием функций из библиотек numpy и pandas.
cov1 = (35*401+45*574+190*874+200*919+40*459+70*739+54*653+150*902+120*746+110*832)/10 - ((35+45+190+200+40+70+54+150+120+110)/10) * (401+574+874+919+459+739+653+902+746+832)/10 
# cov (xy) = M(x*y) - M(x) * M(y)
print(cov1)  # 9157.839999999982
zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
cov2 = np.mean(zp*ks)-np.mean(ks)*np.mean(zp)
print(cov2)  # 9157.839999999997
# r = cov(xy) / (σx * σy)
meanX = (35+45+190+200+40+70+54+150+120+110)/10
meanY = (401+574+874+919+459+739+653+902+746+832)/10
r1 = cov1/(sqrt(((35-meanX)**2+(45-meanX)**2+(190-meanX)**2+(200-meanX)**2+(40-meanX)**2+(70-meanX)**2+(54-meanX)**2+(150-meanX)**2+(120-meanX)**2+(110-meanX)**2)/(10))*sqrt(((401-meanY)**2+(574-meanY)**2+(874-meanY)**2+(919-meanY)**2+(459-meanY)**2+(739-meanY)**2+(653-meanY)**2+(902-meanY)**2+(746-meanY)**2+(832-meanY)**2)/(10)))
print(r1) #  0.8874900920739144
r2 = np.corrcoef(zp,ks)
print(r2) #  0.88749009

# Задача 2. Измерены значения IQ выборки студентов, обучающихся в местных технических вузах:
# 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# Известно, что в генеральной совокупности IQ распределен нормально.
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.
arr = np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
meanIQ = np.mean(arr)
print(meanIQ)
D_IQ = np.var(arr, ddof=1)
print(D_IQ)
t1 = stats.t.ppf(0.975, 9)
print(t1)
print(meanIQ-t1*np.sqrt(D_IQ/10))   #  110.55608365158724
print(meanIQ+t1*np.sqrt(D_IQ/10))   #  125.64391634841274
# Т.о. доверительный интервал для средного с надежностью 0,95 [110.56; 125.64]

# Задача 3. Известно, что рост футболистов в сборной распределен нормально с дисперсией генеральной совокупности, 
# равной 25 кв.см. Объем выборки равен 27, среднее выборочное составляет 174.2. 
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.
z_crit = 1.96
M = 174.2
D = 25
n = 27
print(M-(z_crit*np.sqrt(D/n)))  #  172.31398912064722
print(M+(z_crit*np.sqrt(D/n)))  #  176.08601087935276
# Т.о. доверительный интервал для средного с надежностью 0,95 [172.31; 176.09]