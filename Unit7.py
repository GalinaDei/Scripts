import numpy as np
import scipy.stats as stats
import math
from math import sqrt
# Выбрать тест и проверить, есть  ли различия между выборками:
# 1 )  Даны две  независимые выборки. Не соблюдается условие нормальности
# Сделайте вывод по результатам, полученным с помощью функции
# Для 2-х независмых выборок выбираем тест Манна-Уитни:
x1 = np.array([380,420,290])        # x1  380,420, 290
y2 = np.array([140,360,200,900])    # y1 140,360,200,900
result = stats.mannwhitneyu(x1,y2)  
print (result)  #результат: MannwhitneyuResult(statistic=8.0, pvalue=0.6285714285714286)
# p-value значительно больше критического уровня значимости, значит справедлива нулевая гипотеза - различий между выбрками нет

# 2 ) Исследовалось влияние препарата на уровень давления пациентов. Сначала 
# измерялось давление до приема препарата, потом через 10 минут и через 30 минут. 
# Есть ли статистически значимые различия?
# Для зависимых (повторные измерения) выборок болше двух используем критерий Фридмана:
x1 = np.array([150, 160, 165, 145, 155])   # 1е измерение до приема препарата: 150, 160, 165, 145, 155
x2 = np.array([140, 155, 150,  130, 135])  # 2е измерение через 10 минут: 140, 155, 150,  130, 135 
x3 = np.array([130, 130, 120, 130, 125])   # 3е измерение через 30 минут: 130, 130, 120, 130, 125
result = stats.friedmanchisquare(x1,x2,x3) # FriedmanchisquareResult(statistic=9.578947368421062, pvalue=0.00831683351100441) 
print (result) # p-value=0.00831683351100441 меньше уровня значимости, что говорит о наличии статистически значимых различий между тремя группами.

# 3 ) Сравните 1 и 2 е измерения, предполагая, что 3го измерения через 30 минут не было.
# Для 2-х зависмых (повторные измерения) выборок выбираем тест Уилкоксона:
result = stats.wilcoxon(x1, x2) # WilcoxonResult(statistic=0.0, pvalue=0.0625)
print (result) # значение pvalue=0.0625 не позволяет отвергнуть нулевую гипотезу

# 4) Даны 3 группы  учеников плавания.
# Для сравнения более двух независимых выборок  используем тест Крускела-Уоллеса:
x1 = np.array([56, 60, 62, 55, 71, 67, 59, 58, 64, 67]) # В 1 группе время на дистанцию 50 м составляют: 56, 60, 62, 55, 71, 67, 59, 58, 64, 67
x2 = np.array([57, 58, 69, 48, 72, 70, 68, 71, 50, 53]) # Вторая группа : 57, 58, 69, 48, 72, 70, 68, 71, 50, 53
x3 = np.array([57, 67, 49, 48, 47, 55, 66, 51, 54]) # Третья группа: 57, 67, 49, 48, 47, 55, 66, 51, 54
result = stats.kruskal(x1, x2, x3) # KruskalResult(statistic=5.465564058257224, pvalue=0.06503809985904942)
print (result) # Значение p-value=0.06503809985904942 не позволяет отвергнуть нулевую теорию

# Для задачи 5:
m = (2.51+ 2.35+ 2.74+ 2.56+ 2.40+ 2.36+ 2.65+ 2.7+ 2.67+ 2.34)/10
print (m)
Sd = sqrt(((2.51-m)**2+ (2.35-m)**2+ (2.74-m)**2+ (2.56-m)**2+ (2.40-m)**2+ (2.36-m)**2+ (2.65-m)**2+ (2.7-m)**2+ (2.67-m)**2+ (2.34-m)**2)/9)
print (Sd)
t = (m - 2.5)/(Sd*sqrt(10))
print(t)